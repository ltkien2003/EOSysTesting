/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.eos.ui;

import com.eos.dao.NguoiDungDAO;
import com.eos.dao.NhanVienDAO;
import com.eos.model.NguoiDung;
import com.eos.model.NhanVien;
import com.eos.untils.Auth;
import com.eos.untils.MsgBox;
import de.mkammerer.argon2.Argon2;
import de.mkammerer.argon2.Argon2Factory;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.UIManager;
import javax.swing.border.MatteBorder;

/**
 *
 * @author Kienltpc04639
 */
public class DangNhapJDialog extends javax.swing.JDialog {

	/**
	 * Creates new form DangNhapJDialog
	 */

	public DangNhapJDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
		getRootPane().setOpaque(false);
		getContentPane().setBackground(Color.white);
		setBackground(Color.white);
		txtMaNV.requestFocus();
	}

	public DangNhapJDialog() {
		// TODO Auto-generated constructor stub
	}

	NhanVienDAO dao = new NhanVienDAO();
	NguoiDungDAO nddao = new NguoiDungDAO();

	void init() {
	}

	void dangNhap() {
		String manv = txtMaNV.getText();
		String matkhau = new String(txtMatKhau.getPassword());
		NhanVien nhanVien = dao.selectById(manv);
		NguoiDung nguoiDung = nddao.selectById(manv);
		Argon2 argon2 = Argon2Factory.create(Argon2Factory.Argon2Types.ARGON2id);
		if (manv.equals("")) {
			MsgBox.alert(this, "Tên đăng nhập không được bỏ trống");
			txtMaNV.requestFocus();
			return;
		} else if (matkhau.equals("")) {
			MsgBox.alert(this, "Mật khẩu không được bỏ trống");
			txtMatKhau.requestFocus();
			return;
		}
		if (nhanVien == null && nguoiDung == null) {
			MsgBox.alert(this, "Tên đăng nhập hoặc mật khẩu không hợp lệ");
			txtMaNV.requestFocus();
		} else if (nhanVien != null && !argon2.verify(nhanVien.getMatKhau().trim(), matkhau)) {
			MsgBox.alert(this, "Tên đăng nhập hoặc mật khẩu không hợp lệ");
			txtMatKhau.requestFocus();
		} else if (nguoiDung != null && !argon2.verify(nguoiDung.getMatKhau().trim(), matkhau)) {
			MsgBox.alert(this, "Tên đăng nhập hoặc mật khẩu không hợp lệ");
			txtMatKhau.requestFocus();
		} else if (nhanVien != null && argon2.verify(nhanVien.getMatKhau().trim(), matkhau)) {
			Auth.user = nhanVien;
			this.dispose();
		} else if (nguoiDung != null && argon2.verify(nguoiDung.getMatKhau().trim(), matkhau)) {
			Auth.user1 = nguoiDung;
			this.dispose();
		} else {
			System.out.println("Lỗi chương trình");
		}
	}

	public String dangNhap(String username, String password) {
		String manv = username;
		String matkhau = password;
		NhanVien nhanVien = dao.selectById(manv);
		NguoiDung nguoiDung = nddao.selectById(manv);
		String notification = "";
		Argon2 argon2 = Argon2Factory.create(Argon2Factory.Argon2Types.ARGON2id);
		if (manv.equals("")) {
			notification = "Tên đăng nhập không được bỏ trống";
			return notification;
		} else if (matkhau.equals("")) {
			notification = "Mật khẩu không được bỏ trống";
			return notification;
		}
		if (nhanVien == null && nguoiDung == null) {
			notification = "Tên đăng nhập hoặc mật khẩu không hợp lệ";
		} else if (nhanVien != null && !argon2.verify(nhanVien.getMatKhau().trim(), matkhau)) {
			notification = "Tên đăng nhập hoặc mật khẩu không hợp lệ";
		} else if (nguoiDung != null && !argon2.verify(nguoiDung.getMatKhau().trim(), matkhau)) {
			notification = "Tên đăng nhập hoặc mật khẩu không hợp lệ";
		} else if (nhanVien != null && argon2.verify(nhanVien.getMatKhau().trim(), matkhau)) {
			notification = "Đăng nhập thành công";
			Auth.user = nhanVien;
		} else if (nguoiDung != null && argon2.verify(nguoiDung.getMatKhau().trim(), matkhau)) {
			notification = "Đăng nhập thành công";
			Auth.user1 = nguoiDung;
		} else {
			notification = "Lỗi chương trình";
		}
		return notification;
	}

	void ketThuc() {
		if (MsgBox.confirm(this, "Bạn muốn kết thúc ứng dụng")) {
			System.exit(0);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		lblBanner = new javax.swing.JLabel();
		lblTieuDe = new javax.swing.JLabel();
		lblMaNV = new javax.swing.JLabel();
		txtMaNV = new javax.swing.JTextField();
		lblMatKhau = new javax.swing.JLabel();
		btnDangNhap = new javax.swing.JButton();
		txtMatKhau = new javax.swing.JPasswordField();
		chkHienThiMatKhau = new javax.swing.JCheckBox();
		btnHuyBo = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("EOSys - Đăng nhập");
		setBackground(new java.awt.Color(255, 255, 255));

		lblBanner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eos/icon/login.jpg"))); // NOI18N

		lblTieuDe.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
		lblTieuDe.setText("Đăng Nhập");

		lblMaNV.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
		lblMaNV.setText("Tên đăng nhập");

		txtMaNV.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
		txtMaNV.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(177, 177, 177)));
		txtMaNV.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusGained(java.awt.event.FocusEvent evt) {
				txtMaNVFocusGained(evt);
			}

			public void focusLost(java.awt.event.FocusEvent evt) {
				txtMaNVFocusLost(evt);
			}
		});
		txtMaNV.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtMaNVActionPerformed(evt);
			}
		});
		txtMaNV.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				txtMaNVKeyPressed(evt);
			}
		});

		lblMatKhau.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
		lblMatKhau.setText("Mật khẩu");

		btnDangNhap.setBackground(new java.awt.Color(54, 123, 246));
		btnDangNhap.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
		btnDangNhap.setForeground(new java.awt.Color(255, 255, 255));
		btnDangNhap.setText("Đăng nhập");
		btnDangNhap.setBorder(null);
		btnDangNhap.setFocusable(false);
		btnDangNhap.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseEntered(java.awt.event.MouseEvent evt) {
				btnDangNhapMouseEntered(evt);
			}

			public void mouseExited(java.awt.event.MouseEvent evt) {
				btnDangNhapMouseExited(evt);
			}
		});
		btnDangNhap.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnDangNhapActionPerformed(evt);
			}
		});

		txtMatKhau.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
		txtMatKhau
				.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(177, 177, 177)));
		txtMatKhau.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusGained(java.awt.event.FocusEvent evt) {
				txtMatKhauFocusGained(evt);
			}

			public void focusLost(java.awt.event.FocusEvent evt) {
				txtMatKhauFocusLost(evt);
			}
		});
		txtMatKhau.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtMatKhauActionPerformed(evt);
			}
		});
		txtMatKhau.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				txtMatKhauKeyPressed(evt);
			}
		});

		chkHienThiMatKhau.setBackground(new java.awt.Color(255, 255, 255));
		chkHienThiMatKhau.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
		chkHienThiMatKhau.setText("Hiển thị mật khẩu");
		chkHienThiMatKhau.setFocusable(false);
		chkHienThiMatKhau.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				chkHienThiMatKhauActionPerformed(evt);
			}
		});

		btnHuyBo.setBackground(new java.awt.Color(255, 255, 255));
		btnHuyBo.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
		btnHuyBo.setForeground(new java.awt.Color(177, 177, 177));
		btnHuyBo.setText("Hủy bỏ");
		btnHuyBo.setBorder(null);
		btnHuyBo.setFocusable(false);
		btnHuyBo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnHuyBoActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(lblBanner, javax.swing.GroupLayout.Alignment.TRAILING,
						javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addGroup(layout.createSequentialGroup().addGroup(layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(145, 145, 145).addComponent(lblTieuDe))
						.addGroup(layout.createSequentialGroup().addGap(20, 20, 20)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addComponent(txtMaNV).addComponent(lblMaNV).addComponent(lblMatKhau)
										.addComponent(btnDangNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 360,
												Short.MAX_VALUE)
										.addComponent(txtMatKhau)
										.addComponent(chkHienThiMatKhau, javax.swing.GroupLayout.Alignment.TRAILING))))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
						.addGap(0, 0, Short.MAX_VALUE).addComponent(btnHuyBo).addGap(178, 178, 178)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addComponent(lblBanner).addGap(18, 18, 18)
						.addComponent(lblTieuDe).addGap(6, 6, 6).addComponent(lblMaNV)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 25,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(6, 6, 6).addComponent(lblMatKhau)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 25,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(chkHienThiMatKhau)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(btnDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 45,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnHuyBo)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		pack();
		setLocationRelativeTo(null);
	}// </editor-fold>//GEN-END:initComponents

	private void txtMaNVFocusGained(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_txtMaNVFocusGained
		txtMaNV.setBorder(new MatteBorder(0, 0, 2, 0, new Color(0, 103, 192)));
	}// GEN-LAST:event_txtMaNVFocusGained

	private void txtMaNVFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_txtMaNVFocusLost
		txtMaNV.setBorder(new MatteBorder(0, 0, 2, 0, new Color(177, 177, 177)));
	}// GEN-LAST:event_txtMaNVFocusLost

	private void txtMaNVActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtMaNVActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_txtMaNVActionPerformed

	private void btnDangNhapMouseEntered(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_btnDangNhapMouseEntered
		btnDangNhap.setBackground(new Color(54, 123, 220));
	}// GEN-LAST:event_btnDangNhapMouseEntered

	private void btnDangNhapMouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_btnDangNhapMouseExited
		btnDangNhap.setBackground(new Color(54, 123, 246));
	}// GEN-LAST:event_btnDangNhapMouseExited

	private void txtMatKhauActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtMatKhauActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_txtMatKhauActionPerformed

	private void txtMatKhauFocusGained(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_txtMatKhauFocusGained
		txtMatKhau.setBorder(new MatteBorder(0, 0, 2, 0, new Color(0, 103, 192)));
	}// GEN-LAST:event_txtMatKhauFocusGained

	private void txtMatKhauFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_txtMatKhauFocusLost
		txtMatKhau.setBorder(new MatteBorder(0, 0, 2, 0, new Color(177, 177, 177)));
	}// GEN-LAST:event_txtMatKhauFocusLost

	private void btnDangNhapActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDangNhapActionPerformed
		this.dangNhap();
	}// GEN-LAST:event_btnDangNhapActionPerformed

	private void chkHienThiMatKhauActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_chkHienThiMatKhauActionPerformed
		if (chkHienThiMatKhau.isSelected()) {
			txtMatKhau.setEchoChar((char) 0);
		} else {
			txtMatKhau.setEchoChar((Character) UIManager.get("PasswordField.echoChar"));
		}
	}// GEN-LAST:event_chkHienThiMatKhauActionPerformed

	private void txtMaNVKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtMaNVKeyPressed
		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
			btnDangNhap.doClick();
		} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
			btnHuyBo.doClick();
		}
	}// GEN-LAST:event_txtMaNVKeyPressed

	private void btnHuyBoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnHuyBoActionPerformed
		this.ketThuc();
	}// GEN-LAST:event_btnHuyBoActionPerformed

	private void txtMatKhauKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtMatKhauKeyPressed
		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
			btnDangNhap.doClick();
		} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
			btnHuyBo.doClick();
		}
	}// GEN-LAST:event_txtMatKhauKeyPressed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Windows".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		}
		// </editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				DangNhapJDialog dialog = new DangNhapJDialog(new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnDangNhap;
	private javax.swing.JButton btnHuyBo;
	private javax.swing.JCheckBox chkHienThiMatKhau;
	private javax.swing.JLabel lblBanner;
	private javax.swing.JLabel lblMaNV;
	private javax.swing.JLabel lblMatKhau;
	private javax.swing.JLabel lblTieuDe;
	private javax.swing.JTextField txtMaNV;
	private javax.swing.JPasswordField txtMatKhau;
	// End of variables declaration//GEN-END:variables
}
